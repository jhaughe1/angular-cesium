{"version":3,"sources":["ac-ellipsoid-desc.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,SAAA,EAAW,UAAA,EAAW,MAAO,eAAA,CAAgB;AACtD,OAAO,EAAE,SAAA,EAAU,MAAO,8CAAA,CAA+C;AACzE,OAAO,EAAE,YAAA,EAAa,MAAO,oDAAA,CAAqD;AAClF,OAAO,EAAE,gBAAA,EAAiB,MAAO,4DAAA,CAA6D;AAC9F,OAAO,EAAE,gBAAA,EAAiB,MAAO,4DAAA,CAA6D;AAC9F,OAAO,EAAE,sBAAA,EAAuB,MAAO,iEAAA,CAAkE;AAqBzG;IAA8C,4CAAS;IAEtD,kCAAY,aAAqC,EAAE,YAA0B,EACvE,gBAAkC,EAAE,gBAAkC;eAC3E,kBAAM,aAAa,EAAE,YAAY,EAAE,gBAAgB,EAAE,gBAAgB,CAAC;IACvE,CAAC;IACK,mCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACzB,QAAQ,EAAG,mBAAmB;oBAC9B,QAAQ,EAAG,EAAE;oBACZ,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,wBAAwB,EAAxB,CAAwB,CAAC,EAAE,CAAC;iBAC7F,EAAG,EAAE;KACL,CAAC;IAEK,uCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,sBAAsB,GAAG;QAChC,EAAC,IAAI,EAAE,YAAY,GAAG;QACtB,EAAC,IAAI,EAAE,gBAAgB,GAAG;QAC1B,EAAC,IAAI,EAAE,gBAAgB,GAAG;KACzB,EAL6F,CAK7F,CAAC;IACF,+BAAC;CApBD,AAoBC,CApB6C,SAAS,GAoBtD;SApBY,wBAAwB","file":"ac-ellipsoid-desc.component.js","sourceRoot":"","sourcesContent":["import { Component, forwardRef } from '@angular/core';\r\nimport { BasicDesc } from '../../services/basic-desc/basic-desc.service';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\r\nimport { CesiumProperties } from '../../services/cesium-properties/cesium-properties.service';\r\nimport { EllipsoidDrawerService } from '../../services/drawers/ellipoid-drawer/ellipsoid-drawer.service';\r\n\r\n/**\r\n *  This is a point implementation.\r\n *  The ac-box-desc element must be a child of ac-layer element.\r\n *  The properties of props are the same as the properties PointGraphics and the general properties\r\n *  of Entity\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/Entity.html\r\n *  + https://cesiumjs.org/Cesium/Build/Documentation/EllipsoidGraphics.html\r\n *\r\n *  __Usage:__\r\n *  ```\r\n *   <ac-ellipsoid-desc props=\"{\r\n *     show : ellipsoid.show, //optional\r\n *     radii : ellipsoid.radii,\r\n *     material : ellipsoid.color  //optional\r\n *   }\">\r\n *   </ac-ellipsoid-desc>\r\n *  ```\r\n */\r\n\r\nexport class AcEllipsoidDescComponent extends BasicDesc {\r\n\t\r\n\tconstructor(drawerService: EllipsoidDrawerService, layerService: LayerService,\r\n\t\t\t\t\t\t\tcomputationCache: ComputationCache, cesiumProperties: CesiumProperties) {\r\n\t\tsuper(drawerService, layerService, computationCache, cesiumProperties);\r\n\t}\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n\tselector : 'ac-ellipsoid-desc',\r\n\ttemplate : '',\r\n  providers: [{ provide: BasicDesc, useExisting: forwardRef(() => AcEllipsoidDescComponent) }],\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: EllipsoidDrawerService, },\n{type: LayerService, },\n{type: ComputationCache, },\n{type: CesiumProperties, },\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}