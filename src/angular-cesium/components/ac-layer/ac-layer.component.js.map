{"version":3,"sources":["ac-layer.component.ts"],"names":[],"mappings":"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","file":"ac-layer.component.js","sourceRoot":"","sourcesContent":["// tslint:disable\r\nimport { BillboardDrawerService } from '../../services/drawers/billboard-drawer/billboard-drawer.service';\r\nimport { AfterContentInit, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\nimport { AcNotification } from '../../models/ac-notification';\r\nimport { ActionType } from '../../models/action-type.enum';\r\nimport { ComputationCache } from '../../services/computation-cache/computation-cache.service';\r\nimport { LabelDrawerService } from '../../services/drawers/label-drawer/label-drawer.service';\r\nimport { EllipseDrawerService } from '../../services/drawers/ellipse-drawer/ellipse-drawer.service';\r\nimport { PolylineDrawerService } from '../../services/drawers/polyline-drawer/polyline-drawer.service';\r\nimport { ArcDrawerService } from '../../services/drawers/arc-drawer/arc-drawer.service';\r\nimport { PointDrawerService } from '../../services/drawers/point-drawer/point-drawer.service';\r\nimport { AcEntity } from '../../models/ac-entity';\r\nimport { BasicDrawerService } from '../../services/drawers/basic-drawer/basic-drawer.service';\r\nimport { PolygonDrawerService } from '../../services/drawers/polygon-drawer/polygon-drawer.service';\r\nimport { LayerOptions } from '../../models/layer-options';\r\nimport { DynamicEllipseDrawerService } from '../../services/drawers/static-dynamic/ellipse-drawer/dynamic-ellipse-drawer.service';\r\nimport { DynamicPolylineDrawerService } from '../../services/drawers/static-dynamic/dynamic-polyline-drawer/dynamic-polyline-drawer.service';\r\nimport { StaticCircleDrawerService } from '../../services/drawers/static-dynamic/static-circle-drawer/static-circle-drawer.service';\r\nimport { StaticPolylineDrawerService } from '../../services/drawers/static-dynamic/static-polyline-drawer/static-polyline-drawer.service';\r\nimport { StaticPolygonDrawerService } from '../../services/drawers/static-dynamic/static-polygon-drawer/polygon-drawer.service';\r\nimport { StaticEllipseDrawerService } from '../../services/drawers/static-dynamic/ellipse-drawer/ellipse-drawer.service';\r\nimport { ModelDrawerService } from '../../services/drawers/model-drawer/model-drawer.service';\r\nimport { BoxDrawerService } from '../../services/drawers/box-dawer/box-drawer.service';\r\nimport { CorridorDrawerService } from '../../services/drawers/corridor-dawer/corridor-drawer.service';\r\nimport { CylinderDrawerService } from '../../services/drawers/cylinder-dawer/cylinder-drawer.service';\r\nimport { EllipsoidDrawerService } from '../../services/drawers/ellipoid-drawer/ellipsoid-drawer.service';\r\nimport { PolylineVolumeDrawerService } from '../../services/drawers/polyline-volume-dawer/polyline-volume-drawer.service';\r\nimport { WallDrawerService } from '../../services/drawers/wall-dawer/wall-drawer.service';\r\nimport { RectangleDrawerService } from '../../services/drawers/rectangle-dawer/rectangle-drawer.service';\r\nimport { PolylinePrimitiveDrawerService } from '../../services/drawers/polyline-primitive-drawer/polyline-primitive-drawer.service';\r\nimport { LabelPrimitiveDrawerService } from '../../services/drawers/label-primitive-drawer/label-primitive-drawer.service';\r\nimport { BillboardPrimitiveDrawerService } from '../../services/drawers/billboard-primitive-drawer/billboard-primitive-drawer.service';\r\nimport { MapLayersService } from '../../services/map-layers/map-layers.service';\r\nimport { PointPrimitiveDrawerService } from '../../services/drawers/point-primitive-drawer/point-primitive-drawer.service';\r\nimport { HtmlDrawerService } from '../../services/drawers/html-drawer/html-drawer.service';\r\n\r\n// tslint:enable\r\n/**\r\n *  This is a ac-layer implementation.\r\n *  The ac-layer element must be a child of ac-map element.\r\n *  + acFor `{string}` - get the tracked observable and entityName (see the example).\r\n *  + show `{boolean}` - show/hide layer's entities.\r\n *  + context `{any}` - get the context layer that will use the componnet (most of the time equal to \"this\").\r\n *  + options `{LayerOptions}` - sets the layer options for each drawer.\r\n *  + zIndex `{number}` - controls the zIndex (order) of the layer, layers with greater zIndex will be in front of layers with lower zIndex\r\n *    (Exception For `Billboard` and `Label`, should use `[eyeOffset]` prop instead)</br>\r\n *    zIndex won't work for pritimitve descs (like ac-primitive-polyline...)\r\n *\r\n *\r\n *  __Usage :__\r\n *  ```\r\n *  <ac-map>\r\n *    <ac-layer acFor=\"let track of tracks$\" [show]=\"show\" [context]=\"this\" [options]=\"options\" [zIndex]=\"1\">\r\n *      <ac-billboard-desc props=\"{\r\n *        image: track.image,\r\n *        position: track.position,\r\n *        scale: track.scale,\r\n *        color: track.color,\r\n *        name: track.name\r\n *      }\">\r\n *      </ac-billboard-desc>\r\n *        <ac-label-desc props=\"{\r\n *          position: track.position,\r\n *          pixelOffset : [-15,20] | pixelOffset,\r\n *          text: track.name,\r\n *          font: '15px sans-serif'\r\n *        }\">\r\n *      </ac-label-desc>\r\n *    </ac-layer>\r\n *  </ac-map>\r\n *  ```\r\n */\r\n\r\nexport class AcLayerComponent implements OnInit, OnChanges, AfterContentInit, OnDestroy {\r\n\t\r\n\tshow = true;\r\n\t\r\n\tacFor: string;\r\n\t\r\n\tcontext: any;\r\n\t\r\n\tstore = false;\r\n\t\r\n\toptions: LayerOptions;\r\n\t\r\n\tzIndex = 0;\r\n\r\n\tprivate readonly acForRgx = /^let\\s+.+\\s+of\\s+.+$/;\r\n\tprivate entityName: string;\r\n\tprivate stopObservable = new Subject();\r\n\tprivate observable: Observable<AcNotification>;\r\n\tprivate _drawerList: Map<string, BasicDrawerService>;\r\n\tprivate _updateStream: Subject<AcNotification> = new Subject<AcNotification>();\r\n\tprivate entitiesStore = new Map<string, any>();\r\n\tprivate layerDrawerDataSources: any[] = [];\r\n\r\n\tconstructor(private  layerService: LayerService,\r\n\t\t\t\t\t\t\tprivate _computationCache: ComputationCache,\r\n\t\t\t\t\t\t\tprivate mapLayersService: MapLayersService,\r\n\t\t\t\t\t\t\tbillboardDrawerService: BillboardDrawerService,\r\n\t\t\t\t\t\t\tlabelDrawerService: LabelDrawerService,\r\n\t\t\t\t\t\t\tellipseDrawerService: EllipseDrawerService,\r\n\t\t\t\t\t\t\tpolylineDrawerService: PolylineDrawerService,\r\n\t\t\t\t\t\t\tpolygonDrawerService: PolygonDrawerService,\r\n\t\t\t\t\t\t\tarcDrawerService: ArcDrawerService,\r\n\t\t\t\t\t\t\tpointDrawerService: PointDrawerService,\r\n\t\t\t\t\t\t\tmodelDrawerService: ModelDrawerService,\r\n\t\t\t\t\t\t\tboxDrawerService: BoxDrawerService,\r\n\t\t\t\t\t\t\tcorridorDrawerService: CorridorDrawerService,\r\n\t\t\t\t\t\t\tcylinderDrawerService: CylinderDrawerService,\r\n\t\t\t\t\t\t\tellipsoidDrawerSerice: EllipsoidDrawerService,\r\n\t\t\t\t\t\t\tpolylineVolumeDrawerService: PolylineVolumeDrawerService,\r\n\t\t\t\t\t\t\twallDrawerService: WallDrawerService,\r\n\t\t\t\t\t\t\trectangleDrawerService: RectangleDrawerService,\r\n\t\t\t\t\t\t\tdynamicEllipseDrawerService: DynamicEllipseDrawerService,\r\n\t\t\t\t\t\t\tdynamicPolylineDrawerService: DynamicPolylineDrawerService,\r\n\t\t\t\t\t\t\tstaticCircleDrawerService: StaticCircleDrawerService,\r\n\t\t\t\t\t\t\tstaticPolylineDrawerService: StaticPolylineDrawerService,\r\n\t\t\t\t\t\t\tstaticPolygonDrawerService: StaticPolygonDrawerService,\r\n\t\t\t\t\t\t\tstaticEllipseDrawerService: StaticEllipseDrawerService,\r\n\t\t\t\t\t\t\tpolylinePrimitiveDrawerService: PolylinePrimitiveDrawerService,\r\n\t\t\t\t\t\t\tlabelPrimitiveDrawerService: LabelPrimitiveDrawerService,\r\n\t\t\t\t\t\t\tbillboardPrimitiveDrawerService: BillboardPrimitiveDrawerService,\r\n\t\t\t\t\t\t\tpointPrimitiveDrawerService: PointPrimitiveDrawerService,\r\n\t\t\t\t\t\t\thtmlDrawerService: HtmlDrawerService\r\n\t\t\t\t\t\t\t) {\r\n\t\tthis._drawerList = new Map([\r\n\t\t\t['billboard', billboardDrawerService],\r\n\t\t\t['label', labelDrawerService],\r\n\t\t\t['ellipse', ellipseDrawerService],\r\n\t\t\t['polyline', polylineDrawerService],\r\n\t\t\t['polygon', polygonDrawerService as BasicDrawerService],\r\n\t\t\t['arc', arcDrawerService],\r\n\t\t\t['point', pointDrawerService],\r\n\t\t\t['model', modelDrawerService],\r\n\t\t\t['box', boxDrawerService],\r\n\t\t\t['corridor', corridorDrawerService],\r\n\t\t\t['cylinder', cylinderDrawerService],\r\n\t\t\t['ellipsoid', ellipsoidDrawerSerice],\r\n\t\t\t['polylineVolume', polylineVolumeDrawerService],\r\n\t\t\t['rectangle', rectangleDrawerService],\r\n\t\t\t['wall', wallDrawerService],\r\n\t\t\t['polylinePrimitive', polylinePrimitiveDrawerService],\r\n\t\t\t['labelPrimitive', labelPrimitiveDrawerService],\r\n\t\t\t['billboardPrimitive', billboardPrimitiveDrawerService],\r\n\t\t\t['pointPrimitive', pointPrimitiveDrawerService],\r\n\t\t\t['html', htmlDrawerService],\r\n\r\n\t\t\t['dynamicEllipse', dynamicEllipseDrawerService],\r\n\t\t\t['dynamicPolyline', dynamicPolylineDrawerService],\r\n\t\t\t['staticCircle', staticCircleDrawerService],\r\n\t\t\t['staticPolyline', staticPolylineDrawerService],\r\n\t\t\t['staticPolygon', staticPolygonDrawerService],\r\n\t\t\t['staticEllipse', staticEllipseDrawerService],\r\n\t\t]);\r\n\t}\r\n\r\n\tinit() {\r\n\t\tthis.initValidParams();\r\n\r\n\t\tObservable.merge(this._updateStream, this.observable).takeUntil(this.stopObservable).subscribe((notification) => {\r\n\t\t\tthis._computationCache.clear();\r\n\r\n\t\t\tlet contextEntity = notification.entity;\r\n\t\t\tif (this.store) {\r\n\t\t\t\tcontextEntity = this.updateStore(notification);\r\n\t\t\t}\r\n\r\n\t\t\tthis.context[this.entityName] = contextEntity;\r\n\t\t\tthis.layerService.getDescriptions().forEach((descriptionComponent) => {\r\n\t\t\t\tswitch (notification.actionType) {\r\n\t\t\t\t\tcase ActionType.ADD_UPDATE:\r\n\t\t\t\t\t\tdescriptionComponent.draw(this.context, notification.id, contextEntity);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ActionType.DELETE:\r\n\t\t\t\t\t\tdescriptionComponent.remove(notification.id);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.error('[ac-layer] unknown AcNotification.actionType for notification: ' + notification);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tprivate updateStore(notification: AcNotification): any {\r\n\t\tif (notification.actionType === ActionType.DELETE) {\r\n\t\t\tthis.entitiesStore.delete(notification.id);\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this.entitiesStore.has(notification.id)) {\r\n\t\t\t\tconst entity = this.entitiesStore.get(notification.id);\r\n\t\t\t\tObject.assign(entity, notification.entity);\r\n\t\t\t\treturn entity;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.entitiesStore.set(notification.id, notification.entity);\r\n\t\t\t\treturn notification.entity;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate initValidParams() {\r\n\t\tif (!this.context) {\r\n\t\t\tthrow new Error('ac-layer: must initialize [context] ');\r\n\t\t}\r\n\r\n\t\tif (!this.acForRgx.test(this.acFor)) {\r\n\t\t\tthrow new Error(`ac-layer: Invalid [acFor] syntax. Expected: [acFor]=\"let item of observable\" .Instead received: ${this.acFor}`);\r\n\t\t}\r\n\t\tconst acForArr = this.acFor.split(' ');\r\n\t\tthis.observable = this.context[acForArr[3]];\r\n\t\tthis.entityName = acForArr[1];\r\n\t\tif (!this.observable || !(this.observable instanceof Observable)) {\r\n\t\t\tthrow  new Error('ac-layer: must initailize [acFor] with rx observable, instead received: ' + this.observable);\r\n\t\t}\r\n\r\n\t\tthis.layerService.context = this.context;\r\n\t\tthis.layerService.setEntityName(this.entityName);\r\n\t}\r\n\r\n\tngAfterContentInit(): void {\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n    this.layerService.context = this.context;\r\n\t\tthis.layerService.options = this.options;\r\n\t\tthis.layerService.show = this.show;\r\n\t\tthis.layerService.zIndex = this.zIndex;\r\n\t\tthis._drawerList.forEach((drawer, drawerName) => {\r\n\t\t\tconst initOptions = this.options ? this.options[drawerName] : undefined;\r\n\t\t\tconst drawerDataSources = drawer.init(initOptions);\r\n\t\t\t// only entities drawers create data sources\r\n\t\t\tif (drawerDataSources) {\r\n\t\t\t\tthis.mapLayersService.registerLayerDataSources(drawerDataSources, this.zIndex);\r\n\t\t\t\tthis.layerDrawerDataSources.push(...drawerDataSources);\r\n\t\t\t}\r\n\t\t\tdrawer.setShow(this.show);\r\n\t\t});\r\n\t}\r\n\r\n\tngOnChanges(changes: SimpleChanges): void {\r\n\t\tif (changes.show && !changes.show.firstChange) {\r\n\t\t\tconst showValue = changes['show'].currentValue;\r\n      this.layerService.show = showValue;\r\n\t\t\tthis._drawerList.forEach((drawer) => drawer.setShow(showValue));\r\n\t\t}\r\n\r\n\t\tif (changes.zIndex && !changes.zIndex.firstChange) {\r\n\t\t\tconst zIndexValue = changes['zIndex'].currentValue;\r\n      this.layerService.zIndex = zIndexValue;\r\n\t\t\tthis.mapLayersService.updateAndRefresh(this.layerDrawerDataSources, zIndexValue);\r\n\t\t}\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.mapLayersService.removeDataSources(this.layerDrawerDataSources);\r\n\t\tthis.stopObservable.next(true);\r\n\t\tthis.removeAll();\r\n\t}\r\n\r\n  getLayerService(): LayerService {\r\n    return this.layerService;\r\n  }\r\n\r\n\t/**\r\n\t * Returns the store.\r\n\t */\r\n\tgetStore(): Map<string, any> {\r\n\t\treturn this.entitiesStore;\r\n\t};\r\n\r\n\t/**\r\n\t * Remove all the entities from the layer.\r\n\t */\r\n\tremoveAll(): void {\r\n\t\tthis.layerService.getDescriptions().forEach((description) => description.removeAll());\r\n\t\tthis.entitiesStore.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * remove entity from the layer\r\n\t * @param {number} entityId\r\n\t */\r\n\tremove(entityId: string) {\r\n\t\tthis._updateStream.next({id : entityId, actionType : ActionType.DELETE});\r\n\t\tthis.entitiesStore.delete(entityId);\r\n\t}\r\n\r\n\t/**\r\n\t * add/update entity to/from the layer\r\n\t * @param {AcNotification} notification\r\n\t */\r\n\tupdateNotification(notification: AcNotification): void {\r\n\t\tthis._updateStream.next(notification);\r\n\t}\r\n\r\n\t/**\r\n\t * add/update entity to/from the layer\r\n\t * @param {AcEntity} entity\r\n\t * @param {number} id\r\n\t */\r\n\tupdate(entity: AcEntity, id: string): void {\r\n\t\tthis._updateStream.next({entity, id, actionType : ActionType.ADD_UPDATE});\r\n\t}\r\n\r\n\trefreshAll(collection: AcNotification[]): void {\r\n\t\t// TODO make entity interface: collection of type entity not notification\r\n\t\tObservable.from(collection).subscribe((entity) => this._updateStream.next(entity));\r\n\t}\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n\tselector : 'ac-layer',\r\n\ttemplate : '<ng-content></ng-content>',\r\n\tproviders : [\r\n\t\tLayerService,\r\n\t\tComputationCache,\r\n\t\tBillboardDrawerService,\r\n\t\tLabelDrawerService,\r\n\t\tEllipseDrawerService,\r\n\t\tPolylineDrawerService,\r\n\t\tArcDrawerService,\r\n\t\tPointDrawerService,\r\n\t\tPolygonDrawerService,\r\n\t\tModelDrawerService,\r\n\t\tBoxDrawerService,\r\n\t\tCorridorDrawerService,\r\n\t\tCylinderDrawerService,\r\n\t\tEllipsoidDrawerService,\r\n\t\tPolylineVolumeDrawerService,\r\n\t\tWallDrawerService,\r\n\t\tRectangleDrawerService,\r\n\t\tPolylinePrimitiveDrawerService,\r\n\t\tLabelPrimitiveDrawerService,\r\n\t\tBillboardPrimitiveDrawerService,\r\n\t\tPointPrimitiveDrawerService,\r\n\t\tHtmlDrawerService,\r\n\r\n\t\tDynamicEllipseDrawerService,\r\n\t\tDynamicPolylineDrawerService,\r\n\t\tStaticCircleDrawerService,\r\n\t\tStaticPolylineDrawerService,\r\n\t\tStaticPolygonDrawerService,\r\n\t\tStaticEllipseDrawerService,\r\n\t]\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: LayerService, },\n{type: ComputationCache, },\n{type: MapLayersService, },\n{type: BillboardDrawerService, },\n{type: LabelDrawerService, },\n{type: EllipseDrawerService, },\n{type: PolylineDrawerService, },\n{type: PolygonDrawerService, },\n{type: ArcDrawerService, },\n{type: PointDrawerService, },\n{type: ModelDrawerService, },\n{type: BoxDrawerService, },\n{type: CorridorDrawerService, },\n{type: CylinderDrawerService, },\n{type: EllipsoidDrawerService, },\n{type: PolylineVolumeDrawerService, },\n{type: WallDrawerService, },\n{type: RectangleDrawerService, },\n{type: DynamicEllipseDrawerService, },\n{type: DynamicPolylineDrawerService, },\n{type: StaticCircleDrawerService, },\n{type: StaticPolylineDrawerService, },\n{type: StaticPolygonDrawerService, },\n{type: StaticEllipseDrawerService, },\n{type: PolylinePrimitiveDrawerService, },\n{type: LabelPrimitiveDrawerService, },\n{type: BillboardPrimitiveDrawerService, },\n{type: PointPrimitiveDrawerService, },\n{type: HtmlDrawerService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'show': [{ type: Input },],\n'acFor': [{ type: Input },],\n'context': [{ type: Input },],\n'store': [{ type: Input },],\n'options': [{ type: Input },],\n'zIndex': [{ type: Input },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}