{"version":3,"sources":["pixel-offset.pipe.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAA,EAAoB,MAAO,eAAA,CAAgB;AAapD;IAAA;IAcA,CAAC;IAZA,mCAAS,GAAT,UAAU,KAAU,EAAE,IAAU;QAC/B,MAAM,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC;IAEK,0BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;oBACpB,IAAI,EAAE,aAAa;iBACnB,EAAG,EAAE;KACL,CAAC;IAEK,8BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,sBAAC;CAdD,AAcC,IAAA;SAdY,eAAe","file":"pixel-offset.pipe.js","sourceRoot":"","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n/**\r\n * @example\r\n * <ac-label-desc props=\"{\r\n *            position: track.position,\r\n *            pixelOffset : [-15,20] | pixelOffset,\r\n *            text: track.name,\r\n *            font: '15px sans-serif'\r\n *    }\">\r\n * </ac-label-desc>\r\n */\r\n\r\nexport class PixelOffsetPipe implements PipeTransform {\r\n\r\n\ttransform(value: any, args?: any): any {\r\n\t\treturn new Cesium.Cartesian2(value[0], value[1]);\r\n\t}\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\r\n\tname: 'pixelOffset'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}