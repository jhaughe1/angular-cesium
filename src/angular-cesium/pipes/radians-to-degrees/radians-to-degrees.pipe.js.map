{"version":3,"sources":["radians-to-degrees.pipe.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAA,EAAoB,MAAO,eAAA,CAAgB;AAGpD;IAAA;IAcA,CAAC;IAZA,wCAAS,GAAT,UAAU,KAAU,EAAE,IAAU;QAC/B,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC;IACxD,CAAC;IAEK,+BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;oBACpB,IAAI,EAAE,kBAAkB;iBACxB,EAAG,EAAE;KACL,CAAC;IAEK,mCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,2BAAC;CAdD,AAcC,IAAA;SAdY,oBAAoB","file":"radians-to-degrees.pipe.js","sourceRoot":"","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n\r\nexport class RadiansToDegreesPipe implements PipeTransform {\r\n\r\n\ttransform(value: any, args?: any): number {\r\n\t\treturn (360 - Math.round(180 * value / Math.PI)) % 360;\r\n\t}\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\r\n\tname: 'radiansToDegrees'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}