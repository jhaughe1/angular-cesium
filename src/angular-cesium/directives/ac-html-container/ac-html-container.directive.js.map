{"version":3,"sources":["ac-html-container.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAe,UAAA,EAAW,MAAO,eAAA,CAAgB;AACrE,OAAO,EAAE,aAAA,EAAc,MAAO,wDAAA,CAAyD;AAGvF;IAII,kCACY,QAAoB,EACpB,cAA6B;QAD7B,aAAQ,GAAR,QAAQ,CAAY;QACpB,mBAAc,GAAd,cAAc,CAAe;IACtC,CAAC;IAGJ,sBAAI,qDAAe;aAAnB,UAAoB,EAAU;YAC1B,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QAClB,CAAC;;;OAAA;IAED,2CAAQ,GAAR;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC;YACzB,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;QACrE,CAAC;QAED,IAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACjD,MAAM,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;IAC3D,CAAC;IACE,mCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACtB,QAAQ,EAAE,mBAAmB;iBAChC,EAAG,EAAE;KACL,CAAC;IAEK,uCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;QACpB,EAAC,IAAI,EAAE,aAAa,GAAG;KACtB,EAH6F,CAG7F,CAAC;IACK,uCAAc,GAA2C;QAChE,iBAAiB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KACpC,CAAC;IACF,+BAAC;CAnCD,AAmCC,IAAA;SAnCY,wBAAwB","file":"ac-html-container.directive.js","sourceRoot":"","sourcesContent":["import { Directive, Input, OnInit, ElementRef } from '@angular/core';\r\nimport { AcHtmlManager } from '../../services/ac-html-manager/ac-html-manager.service';\r\n\r\n\r\nexport class AcHtmlContainerDirective implements OnInit {\r\n\r\n    private _id: any;\r\n\r\n    constructor(\r\n        private _element: ElementRef,\r\n        private _acHtmlManager: AcHtmlManager\r\n    ) {}\r\n\r\n    \r\n    set acHtmlContainer(id: string) {\r\n        this._id = id;\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this._id === undefined) {\r\n            throw new Error(`AcHtml container ERROR: entity id not defined`);\r\n        }\r\n\r\n        const entity = this._acHtmlManager.get(this._id);\r\n        entity.primitive.element = this._element.nativeElement;\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: '[acHtmlContainer]'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: AcHtmlManager, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'acHtmlContainer': [{ type: Input },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}