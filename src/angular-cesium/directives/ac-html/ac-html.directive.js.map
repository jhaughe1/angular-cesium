{"version":3,"sources":["ac-html.directive.ts"],"names":[],"mappings":"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","file":"ac-html.directive.js","sourceRoot":"","sourcesContent":["import { ChangeDetectorRef, Directive, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { LayerService } from '../../services/layer-service/layer-service.service';\r\nimport { AcHtmlManager } from '../../services/ac-html-manager/ac-html-manager.service';\r\n\r\nexport class AcHtmlContext {\r\n    constructor(\r\n        public id: any,\r\n        public context: any\r\n    ) {}\r\n}\r\n\r\n\r\nexport class AcHtmlDirective implements OnInit {\r\n\r\n    private _views = new Map<any, {viewRef: any, context: any}>();\r\n\r\n    constructor(\r\n        private _templateRef: TemplateRef<AcHtmlContext>,\r\n        private _viewContainerRef: ViewContainerRef,\r\n        private _changeDetector: ChangeDetectorRef,\r\n        private _layerService: LayerService,\r\n        private _acHtmlManager: AcHtmlManager\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n\r\n    }\r\n\r\n    private _handleView(id: any, primitive: any, entity: any) {\r\n        if (!this._views.has(id) && primitive.show) {\r\n            const context = new AcHtmlContext(id, {$implicit: entity});\r\n            const viewRef = this._viewContainerRef.createEmbeddedView(this._templateRef, context);\r\n            this._views.set(id, {viewRef, context});\r\n            this._changeDetector.detectChanges();\r\n        }\r\n        else if (this._views.has(id) && !primitive.show) {\r\n            this.remove(id, primitive);\r\n        }\r\n        else if (this._views.has(id) && primitive.show) {\r\n            this._changeDetector.detectChanges();\r\n        }\r\n    }\r\n\r\n    addOrUpdate(id: any, primitive: any) {\r\n        const context = this._layerService.context;\r\n        const entity = context[this._layerService.getEntityName()];\r\n\r\n        if (this._views.has(id)) {\r\n            this._views.get(id).context.context.$implicit = entity;\r\n        }\r\n\r\n        this._acHtmlManager.addOrUpdate(id, {entity, primitive});\r\n        this._handleView(id, primitive, entity);\r\n    }\r\n\r\n    remove(id: any, primitive: any) {\r\n        if (!this._views.has(id)) {\r\n            return;\r\n        }\r\n\r\n        const {viewRef} = this._views.get(id);\r\n        this._viewContainerRef.remove(this._viewContainerRef.indexOf(viewRef));\r\n        this._views.delete(id);\r\n        this._acHtmlManager.remove(id);\r\n        primitive.element = null;\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: '[acHtml]',\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n{type: ChangeDetectorRef, },\n{type: LayerService, },\n{type: AcHtmlManager, },\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}