{"version":3,"sources":["viewer-factory.service.ts"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAG3C;IAIC;QACC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACtB,CAAC;IASD,oCAAY,GAAZ,UAAa,YAAyB,EAAE,OAAa;QAEpD,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,iBAAiB,CAAC,GAAG,mCAAmC,CAAC;QACjE,CAAC;QAED,IAAI,MAAM,GAAG,IAAI,CAAC;QAClB,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACb,MAAM,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,aAC3C,cAAc,EAAG;oBAChB,KAAK,EAAG,EAAC,qBAAqB,EAAG,IAAI,EAAC;iBACtC,IACE,OAAO,EACT,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,MAAM,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,EAC3C;gBAEC,eAAe,EAAG,MAAM,CAAC,mCAAmC,CAAC;oBAC5D,GAAG,EAAG,MAAM,CAAC,cAAc,CAAC,gCAAgC,CAAC;iBAC7D,CAAC;gBACF,eAAe,EAAG,KAAK;gBACvB,QAAQ,EAAG,KAAK;gBAChB,cAAc,EAAG;oBAChB,KAAK,EAAG,EAAC,qBAAqB,EAAG,IAAI,EAAC;iBACtC;aACD,CAAC,CAAC;QACL,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IACf,CAAC;IACK,wBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IAEK,4BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,oBAAC;CApDD,AAoDC,IAAA;SApDY,aAAa","file":"viewer-factory.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n\r\nexport class ViewerFactory {\r\n\tcesium: any;\r\n\t\r\n\t\r\n\tconstructor() {\r\n\t\tthis.cesium = Cesium;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Creates a viewer with default or custom options\r\n\t * @param mapContainer - container to initialize the viewer on\r\n\t * @param options - Options to create the viewer with - Optional\r\n\t *\r\n\t * @returns {any} new viewer\r\n\t */\r\n\tcreateViewer(mapContainer: HTMLElement, options?: any) {\r\n\t\t// For backwards compatibility, TODO: should be removed\r\n\t\tif (!window['CESIUM_BASE_URL']) {\r\n\t\t\twindow['CESIUM_BASE_URL'] = '/node_modules/cesium/Build/Cesium';\r\n\t\t}\r\n\t\t\r\n\t\tlet viewer = null;\r\n\t\tif (options) {\r\n\t\t\tviewer = new this.cesium.Viewer(mapContainer, {\r\n\t\t\t\tcontextOptions : {\r\n\t\t\t\t\twebgl : {preserveDrawingBuffer : true}\r\n\t\t\t\t},\r\n\t\t\t\t...options\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tviewer = new this.cesium.Viewer(mapContainer,\r\n\t\t\t\t{\r\n\t\t\t\t\t// Poor internet connection - use default globe image, TODO: should be removed\r\n\t\t\t\t\timageryProvider : Cesium.createTileMapServiceImageryProvider({\r\n\t\t\t\t\t\turl : Cesium.buildModuleUrl('Assets/Textures/NaturalEarthII')\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tbaseLayerPicker : false,\r\n\t\t\t\t\tgeocoder : false,\r\n\t\t\t\t\tcontextOptions : {\r\n\t\t\t\t\t\twebgl : {preserveDrawingBuffer : true}\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn viewer;\r\n\t}\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}