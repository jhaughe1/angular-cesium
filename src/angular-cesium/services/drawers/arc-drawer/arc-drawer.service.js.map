{"version":3,"sources":["arc-drawer.service.ts"],"names":[],"mappings":"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","file":"arc-drawer.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CesiumService } from '../../cesium/cesium.service';\r\nimport { PrimitivesDrawerService } from '../primitives-drawer/primitives-drawer.service';\r\nimport { GeoUtilsService } from '../../geo-utils/geo-utils.service';\r\n\r\n/**\r\n +  This drawer is responsible for drawing an arc over the Cesium map.\r\n +  This implementation uses simple PolylineGeometry and Primitive parameters.\r\n +  This doesn't allow us to change the position, color, etc.. of the arc but setShow only.\r\n */\r\n\r\n\r\nexport class ArcDrawerService extends PrimitivesDrawerService {\r\n  constructor(cesiumService: CesiumService) {\r\n    super(Cesium.PolylineCollection, cesiumService);\r\n  }\r\n\r\n  _calculateArcPositions(cesiumProps: any) {\r\n    const quality = cesiumProps.quality || 18;\r\n    const delta = (cesiumProps.delta) / quality;\r\n    const pointsArray = [];\r\n    for (let i = 0; i < quality + 1; ++i) {\r\n      const point =\r\n        GeoUtilsService.pointByLocationDistanceAndAzimuth(cesiumProps.center, cesiumProps.radius, cesiumProps.angle + delta * i, true);\r\n      pointsArray.push(point);\r\n    }\r\n\r\n    return pointsArray;\r\n  }\r\n\r\n  _calculateTriangle(cesiumProps: any) {\r\n    return [\r\n      cesiumProps.center,\r\n      GeoUtilsService.pointByLocationDistanceAndAzimuth(cesiumProps.center, cesiumProps.radius, cesiumProps.angle, true)\r\n    ];\r\n  }\r\n\r\n  _calculateArc(cesiumProps: any) {\r\n    const arcPoints = this._calculateArcPositions(cesiumProps);\r\n    return cesiumProps.drawEdges ? arcPoints.concat(this._calculateTriangle(cesiumProps)) : arcPoints;\r\n  }\r\n\r\n  add(cesiumProps: any): any {\r\n    cesiumProps.positions = this._calculateArc(cesiumProps);\r\n    if (cesiumProps.color) {\r\n      const material = Cesium.Material.fromType('Color');\r\n      material.uniforms.color = cesiumProps.color;\r\n      cesiumProps.material = material;\r\n    }\r\n\r\n    return this._cesiumCollection.add(cesiumProps);\r\n  };\r\n\r\n  update(primitive: any, cesiumProps: any) {\r\n    if (!cesiumProps.constantColor && cesiumProps.color &&\r\n      !primitive.material.uniforms.color.equals(cesiumProps.color)) {\r\n      primitive.material.uniforms.color = cesiumProps.color;\r\n    }\r\n    primitive.width = cesiumProps.width !== undefined ? cesiumProps.width : primitive.width;\r\n    primitive.show = cesiumProps.show !== undefined ? cesiumProps.show : primitive.show;\r\n    primitive.distanceDisplayCondition = cesiumProps.distanceDisplayCondition !== undefined ?\r\n      cesiumProps.distanceDisplayCondition : primitive.distanceDisplayCondition;\r\n    primitive.positions = this._calculateArc(cesiumProps);\r\n\r\n    return primitive;\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CesiumService, },\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}