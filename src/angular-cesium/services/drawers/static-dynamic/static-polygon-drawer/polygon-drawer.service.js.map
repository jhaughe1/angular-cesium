{"version":3,"sources":["polygon-drawer.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,qBAAA,EAAsB,MAAO,4DAAA,CAA6D;AACnG,OAAO,EAAE,aAAA,EAAc,MAAO,gCAAA,CAAiC;AAQ/D;IAAgD,8CAAqB;IACpE,oCAAY,aAA4B;eACvC,kBAAM,MAAM,CAAC,eAAe,EAAE,aAAa,CAAC;IAC7C,CAAC;IACK,qCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IAEK,yCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,aAAa,GAAG;KACtB,EAF6F,CAE7F,CAAC;IACF,iCAAC;CAXD,AAWC,CAX+C,qBAAqB,GAWpE;SAXY,0BAA0B","file":"polygon-drawer.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { StaticPrimitiveDrawer } from '../static-primitive-drawer/static-primitive-drawer.service';\r\nimport { CesiumService } from '../../../cesium/cesium.service';\r\n\r\n/**\r\n + This drawer is responsible for drawing a polygon over the Cesium map.\r\n + This implementation uses simple PolygonGeometry and Primitive parameters.\r\n + This doesn't allow us to change the position, color, etc.. of the polygons. For that you may use the dynamic polygon component.\r\n */\r\n\r\nexport class StaticPolygonDrawerService extends StaticPrimitiveDrawer {\r\n\tconstructor(cesiumService: CesiumService) {\r\n\t\tsuper(Cesium.PolygonGeometry, cesiumService);\r\n\t}\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CesiumService, },\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}