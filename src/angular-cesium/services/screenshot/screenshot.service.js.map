{"version":3,"sources":["screenshot.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,aAAA,EAAc,MAAO,0BAAA,CAA2B;AAiBzD;IACC,2BAAoB,YAA2B;QAA3B,iBAAY,GAAZ,YAAY,CAAe;IAC/C,CAAC;IAED,yDAA6B,GAA7B;QACC,IAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;QAC7C,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,CAAA;IAC1B,CAAC;IAGD,iDAAqB,GAArB,UAAsB,QAAoB;QAApB,yBAAA,EAAA,oBAAoB;QACzC,IAAM,OAAO,GAAG,IAAI,CAAC,6BAA6B,EAAE,CAAC;QACrD,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IACrC,CAAC;IAEO,uCAAW,GAAnB,UAAoB,GAAW,EAAE,IAAY;QAC5C,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;QAChB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IACK,4BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IAEK,gCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,aAAa,GAAG;KACtB,EAF6F,CAE7F,CAAC;IACF,wBAAC;CA9BD,AA8BC,IAAA;SA9BY,iBAAiB","file":"screenshot.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CesiumService } from '../cesium/cesium.service';\r\n\r\n/**\r\n * Take screenshot of your cesium globe.\r\n *\r\n * usage:\r\n * ```typescript\r\n * // get base 64 data url\r\n * const dataUrl = screenshotService.getMapScreenshotDataUrl();\r\n *\r\n * // or download as png\r\n * screenshotService.downloadMapScreenshot('my-map.png');\r\n *\r\n * ```\r\n *\r\n */\r\n\r\nexport class ScreenshotService {\r\n\tconstructor(private cesiumSerive: CesiumService) {\r\n\t}\r\n\t\r\n\tgetMapScreenshotDataUrlBase64() {\r\n\t\tconst canvas = this.cesiumSerive.getCanvas();\r\n\t\treturn canvas.toDataURL()\r\n\t}\r\n\t\r\n\t\r\n\tdownloadMapScreenshot(filename = 'map.png') {\r\n\t\tconst dataUrl = this.getMapScreenshotDataUrlBase64();\r\n\t\tthis.downloadURI(dataUrl, filename);\r\n\t}\r\n\t\r\n\tprivate downloadURI(uri: string, name: string) {\r\n\t\tconst link = document.createElement('a');\r\n\t\tlink.download = name;\r\n\t\tlink.href = uri;\r\n\t\tdocument.body.appendChild(link);\r\n\t\tlink.click();\r\n\t\tdocument.body.removeChild(link);\r\n\t}\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CesiumService, },\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}