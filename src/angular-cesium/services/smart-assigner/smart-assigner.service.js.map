{"version":3,"sources":["smart-assigner.service.ts"],"names":[],"mappings":"AAGA;IAAA;IAqBA,CAAC;IAnBU,oBAAM,GAAb,UAAc,KAAoB,EAAE,cAA8B;QAApD,sBAAA,EAAA,UAAoB;QAAE,+BAAA,EAAA,qBAA8B;QAC9D,IAAI,MAAM,GAAG,EAAE,CAAC;QAEhB,KAAK,CAAC,OAAO,CAAC,UAAA,IAAI;YACd,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;gBAClB,MAAM,IAAI,eAAa,IAAI,kCAA6B,IAAI,mBAAc,IAAI,WAAQ,CAAC;YAC3F,CAAC;YACD,IAAI,CAAC,CAAC;gBACF,MAAM,IAAI,WAAS,IAAI,mBAAc,IAAI,SAAM,CAAC;YACpD,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,MAAM,IAAI,aAAa,CAAC;QACxB,IAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;QAEtD,MAAM,CAAC,uBAAuB,IAAY,EAAE,IAAY;YACpD,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAChC,CAAC,CAAC;IACN,CAAC;IACL,oBAAC;AAAD,CArBA,AAqBC,IAAA","file":"smart-assigner.service.js","sourceRoot":"","sourcesContent":["/**\r\n * Service for effective assignment.\r\n */\r\nexport class SmartAssigner {\r\n\r\n    static create(props: string[] = [], allowUndefined: boolean = true): (obj1: Object, obj2: Object) => Object {\r\n        let fnBody = ``;\r\n\r\n        props.forEach(prop => {\r\n            if (!allowUndefined) {\r\n                fnBody += `if (obj2['${prop}'] !== undefined) { obj1['${prop}'] = obj2['${prop}']; } `;\r\n            }\r\n            else {\r\n                fnBody += `obj1['${prop}'] = obj2['${prop}']; `;\r\n            }\r\n        });\r\n\r\n        fnBody += `return obj1`;\r\n        const assignFn = new Function('obj1', 'obj2', fnBody);\r\n\r\n        return function smartAssigner(obj1: Object, obj2: Object) {\r\n            return assignFn(obj1, obj2);\r\n        };\r\n    }\r\n}\r\n"]}