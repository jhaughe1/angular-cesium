{"version":3,"sources":["map-layers.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAA,EAAc,MAAO,0BAAA,CAA2B;AACzD,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAG3C;IAIC,0BAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAFxC,sBAAiB,GAAU,EAAE,CAAC;IAItC,CAAC;IAED,mDAAwB,GAAxB,UAAyB,WAAkB,EAAE,MAAc;QAA3D,iBAKC;QAJA,WAAW,CAAC,OAAO,CAAC,UAAA,EAAE;YACrB,EAAE,CAAC,MAAM,GAAG,MAAM,CAAC;YACnB,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,wCAAa,GAAb;QAAA,iBAMC;QALA,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,EAAnB,CAAmB,CAAC,CAAC;QAE3D,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAC,UAAU;YACzC,KAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;IACJ,CAAC;IAED,2CAAgB,GAAhB,UAAiB,WAAkB,EAAE,SAAiB;QAAtD,iBAYC;QAXA,EAAE,CAAC,CAAC,WAAW,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;YACvC,WAAW,CAAC,OAAO,CAAC,UAAC,EAAE;gBACtB,IAAM,KAAK,GAAG,KAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;gBACjD,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oBAClB,KAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,SAAS,CAAC;gBAClD,CAAC;YACF,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;YACvD,IAAI,CAAC,aAAa,EAAE,CAAC;QACtB,CAAC;IACF,CAAC;IAED,4CAAiB,GAAjB,UAAkB,WAAkB;QAApC,iBAQC;QAPA,WAAW,CAAC,OAAO,CAAC,UAAA,EAAE;YACrB,IAAM,KAAK,GAAG,KAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YACjD,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClB,KAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBACxC,KAAI,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;YAC7D,CAAC;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IACK,2BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IAEK,+BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,aAAa,GAAG;KACtB,EAF6F,CAE7F,CAAC;IACF,uBAAC;CArDD,AAqDC,IAAA;SArDY,gBAAgB","file":"map-layers.service.js","sourceRoot":"","sourcesContent":["import { CesiumService } from '../cesium/cesium.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n\r\nexport class MapLayersService {\r\n\t\r\n\tprivate layersDataSources: any[] = [];\r\n\t\r\n\tconstructor(private cesiumService: CesiumService) {\r\n\t\r\n\t}\r\n\t\r\n\tregisterLayerDataSources(dataSources: any[], zIndex: number) {\r\n\t\tdataSources.forEach(ds => {\r\n\t\t\tds.zIndex = zIndex;\r\n\t\t\tthis.layersDataSources.push(ds);\r\n\t\t});\r\n\t}\r\n\t\r\n\tdrawAllLayers() {\r\n\t\tthis.layersDataSources.sort((a, b) => a.zIndex - b.zIndex);\r\n\t\t\r\n\t\tthis.layersDataSources.forEach((dataSource) => {\r\n\t\t\tthis.cesiumService.getViewer().dataSources.add(dataSource);\r\n\t\t});\r\n\t}\r\n\t\r\n\tupdateAndRefresh(dataSources: any[], newZIndex: number) {\r\n\t\tif (dataSources && dataSources.length) {\r\n\t\t\tdataSources.forEach((ds) => {\r\n\t\t\t\tconst index = this.layersDataSources.indexOf(ds);\r\n\t\t\t\tif (index !== -1) {\r\n\t\t\t\t\tthis.layersDataSources[index].zIndex = newZIndex;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.cesiumService.getViewer().dataSources.removeAll();\r\n\t\t\tthis.drawAllLayers();\r\n\t\t}\r\n\t}\r\n\t\r\n\tremoveDataSources(dataSources: any[]) {\r\n\t\tdataSources.forEach(ds => {\r\n\t\t\tconst index = this.layersDataSources.indexOf(ds);\r\n\t\t\tif (index !== -1) {\r\n\t\t\t\tthis.layersDataSources.splice(index, 1);\r\n\t\t\t\tthis.cesiumService.getViewer().dataSources.remove(ds, true);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CesiumService, },\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}