{"version":3,"sources":["selection-manager.service.ts"],"names":[],"mappings":"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","file":"selection-manager.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { AcEntity } from '../../models/ac-entity';\r\nimport { CesiumEvent } from '../map-events-mananger/consts/cesium-event.enum';\r\nimport { MapEventsManagerService } from '../map-events-mananger/map-events-manager';\r\nimport { PickOptions } from '../map-events-mananger/consts/pickOptions.enum';\r\nimport { CesiumEventModifier } from '../map-events-mananger/consts/cesium-event-modifier.enum';\r\nimport { MapsManagerService } from '../maps-manager/maps-manager.service';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n\r\nexport interface SelectionOptions {\r\n\tevent?: CesiumEvent;\r\n\tmodifier?: CesiumEventModifier;\r\n\tentityType?: any;\r\n}\r\n\r\n/**\r\n * Manages entity selection service for any given mouse event and modifier\r\n * the service will manage the list of selected items.\r\n * check out the example\r\n * you must provide the service yourself\r\n *\r\n *  __Usage :__\r\n * ```\r\n * // provide the service in some component\r\n * @Component({\r\n * //...\r\n *  providers: [SelectionManagerService]\r\n * }\r\n *\r\n * // Usage example:\r\n * // init selection\r\n * const selectedIndicator = ture; // optional default true, if true a boolean \"selected\" property will be added to the selected entity\r\n * selectionManagerService.initSelection({ event: CesiumEvent.LEFT_CLICK,\r\n  * \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmodifier: CesiumEventModifier.CTRL\r\n  * \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},selectedIndicator);\r\n * // Get selected\r\n * const selected = selectionManagerService.selected();\r\n *\r\n * // Or as observer\r\n * const selected$ = selectionManagerService.selected$();\r\n *\r\n * ```\r\n *\r\n */\r\n\r\nexport class SelectionManagerService {\r\n\tselectedEntitiesItems$: BehaviorSubject<AcEntity[]> = new BehaviorSubject<AcEntity[]>([]);\r\n\tselectedEntitySubject$: Subject<AcEntity> = new Subject<AcEntity>();\r\n\tprivate mapEventsManagerService: MapEventsManagerService;\r\n\t\r\n\tconstructor(private mapsManager: MapsManagerService) {\r\n\t}\r\n\t\r\n\tselectedEntities$(): Observable<AcEntity[]> {\r\n\t\treturn this.selectedEntitiesItems$.asObservable();\r\n\t}\r\n\t\r\n\tselectedEntities(): AcEntity[] {\r\n\t\treturn this.selectedEntitiesItems$.getValue();\r\n\t}\r\n\t\r\n\tselectedEntity$() {\r\n\t\treturn this.selectedEntitySubject$;\r\n\t}\r\n\t\r\n\ttoggleSelection(entity: AcEntity, addSelectedIndicator: boolean) {\r\n\t\tconst current = this.selectedEntities();\r\n\t\tif (current.indexOf(entity) === -1) {\r\n\t\t\tthis.addToSelected(entity, addSelectedIndicator);\r\n\t\t} else {\r\n\t\t\tthis.removeSelected(entity, addSelectedIndicator)\r\n\t\t}\r\n\t}\r\n\t\r\n\tprivate addToSelected(entity: AcEntity, addSelectedIndicator: boolean) {\r\n\t\tif (addSelectedIndicator) {\r\n\t\t\tentity['selected'] = true;\r\n\t\t}\r\n\t\t\r\n\t\tconst current = this.selectedEntities();\r\n\t\tthis.selectedEntitySubject$.next(entity);\r\n\t\tthis.selectedEntitiesItems$.next([...current, entity]);\r\n\t}\r\n\t\r\n\tprivate removeSelected(entity: AcEntity, addSelectedIndicator: boolean) {\r\n\t\tif (addSelectedIndicator) {\r\n\t\t\tentity['selected'] = false;\r\n\t\t}\r\n\t\t\r\n\t\tconst current = this.selectedEntities();\r\n\t\tconst entityIndex = current.indexOf(entity);\r\n\t\tif (entityIndex !== -1) {\r\n\t\t\tcurrent.splice(entityIndex, 1);\r\n\t\t\tthis.selectedEntitiesItems$.next(current);\r\n\t\t\tthis.selectedEntitySubject$.next(entity);\r\n\t\t}\r\n\t}\r\n\t\r\n\tinitSelection(selectionOptions?: SelectionOptions, addSelectedIndicator = true, eventPriority?: number, mapId?: string) {\r\n\t\tthis.mapEventsManagerService = this.mapsManager.getMap(mapId).getMapEventsManager();\r\n\t\t\r\n\t\tif (!selectionOptions) {\r\n\t\t\tObject.assign(selectionOptions, {event : CesiumEvent.LEFT_CLICK});\r\n\t\t}\r\n\t\t\r\n\t\tconst eventSubscription = this.mapEventsManagerService.register({\r\n\t\t\tevent : selectionOptions.event,\r\n\t\t\tpick : PickOptions.PICK_ONE,\r\n\t\t\tmodifier : selectionOptions.modifier,\r\n\t\t\tentityType : selectionOptions.entityType,\r\n\t\t\tpriority : eventPriority,\r\n\t\t});\r\n\t\t\r\n\t\teventSubscription\r\n\t\t\t.map(result => result.entities)\r\n\t\t\t.filter(entities => entities && entities.length > 0)\r\n\t\t\t.subscribe(entities => {\r\n\t\t\t\tconst entity = entities[0];\r\n\t\t\t\tthis.toggleSelection(entity, addSelectedIndicator);\r\n\t\t\t});\r\n\t}\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MapsManagerService, },\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}