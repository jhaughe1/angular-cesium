{"version":3,"sources":["json-mapper.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,gBAAA,EAAiB,MAAO,oBAAA,CAAqB;AAGtD;IAGC;QACC,IAAI,CAAC,OAAO,GAAG,IAAI,gBAAgB,EAAE,CAAC;IACvC,CAAC;IAED,wBAAG,GAAH,UAAI,UAAkB;QACrB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACrC,CAAC;IACK,qBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IAEK,yBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,iBAAC;CAhBD,AAgBC,IAAA;SAhBY,UAAU","file":"json-mapper.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { JsonStringMapper } from 'json-string-mapper';\r\n\r\n\r\nexport class JsonMapper {\r\n\tprivate _mapper: JsonStringMapper;\r\n\r\n\tconstructor() {\r\n\t\tthis._mapper = new JsonStringMapper();\r\n\t}\r\n\r\n\tmap(expression: string): Map<string, string> {\r\n\t\treturn this._mapper.map(expression);\r\n\t}\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}