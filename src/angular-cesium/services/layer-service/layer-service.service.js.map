{"version":3,"sources":["layer-service.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAA,EAAc,UAAA,EAAW,MAAO,eAAA,CAAgB;AAKzD;IAAA;QAMU,WAAM,GAAG,IAAI,CAAC;QACd,iBAAY,GAAmB,EAAE,CAAC;QAClC,gBAAW,GAAG,IAAI,YAAY,EAAE,CAAC;IAoF3C,CAAC;IAlFC,sBAAI,+BAAK;aAAT;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;aAED,UAAU,KAAc;YACtB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACtB,CAAC;;;OAJA;IAMD,sBAAI,gCAAM;aAAV;YACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;aAED,UAAW,KAAa;YACtB,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YAC1B,CAAC;YACD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC;;;OAPA;IASD,sBAAI,8BAAI;aAAR;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACpB,CAAC;aAED,UAAS,KAAc;YACrB,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACzB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YAC1B,CAAC;YACD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC;;;OAPA;IASD,sBAAI,iCAAO;aAAX;YACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAY,KAAmB;YAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QAC1B,CAAC;;;OALA;IAOD,sBAAI,iCAAO;aAAX;YACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAED,UAAY,OAAO;YACjB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;QAC1B,CAAC;;;OALA;IAOD,oCAAa,GAAb,UAAc,IAAY;QACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,oCAAa,GAAb;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,0CAAmB,GAAnB,UAAoB,oBAAkC;QACpD,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACxD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAC/C,CAAC;IACH,CAAC;IAED,4CAAqB,GAArB,UAAsB,oBAAkC;QACtD,IAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,oBAAoB,CAAC,CAAC;QAC9D,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACrC,CAAC;IACH,CAAC;IAED,sCAAe,GAAf;QACE,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED,mCAAY,GAAZ;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IACI,uBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IAEK,2BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,mBAAC;CA5FD,AA4FC,IAAA;SA5FY,YAAY","file":"layer-service.service.js","sourceRoot":"","sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\r\nimport { IDescription } from '../../models/description';\r\nimport { LayerOptions } from '../../models/layer-options';\r\n\r\n\r\nexport class LayerService {\r\n  private _context: any;\r\n  private _options: LayerOptions;\r\n  private _show: boolean;\r\n  private _zIndex: number;\r\n  private _entityName: string;\r\n  private _cache = true;\r\n  private descriptions: IDescription[] = [];\r\n  private layerUpdate = new EventEmitter();\r\n\r\n  get cache(): boolean {\r\n    return this._cache;\r\n  }\r\n\r\n  set cache(value: boolean) {\r\n    this._cache = value;\r\n  }\r\n\r\n  get zIndex(): number {\r\n    return this._zIndex;\r\n  }\r\n\r\n  set zIndex(value: number) {\r\n    if (value !== this._zIndex) {\r\n      this.layerUpdate.emit();\r\n    }\r\n    this._zIndex = value;\r\n  }\r\n\r\n  get show(): boolean {\r\n    return this._show;\r\n  }\r\n\r\n  set show(value: boolean) {\r\n    if (value !== this._show) {\r\n      this.layerUpdate.emit();\r\n    }\r\n    this._show = value;\r\n  }\r\n\r\n  get options(): LayerOptions {\r\n    return this._options;\r\n  }\r\n\r\n  set options(value: LayerOptions) {\r\n    this._options = value;\r\n    this.layerUpdate.emit();\r\n  }\r\n\r\n  get context(): any {\r\n    return this._context;\r\n  }\r\n\r\n  set context(context) {\r\n    this._context = context;\r\n    this.layerUpdate.emit();\r\n  }\r\n\r\n  setEntityName(name: string) {\r\n    this._entityName = name;\r\n  }\r\n\r\n  getEntityName(): string {\r\n    return this._entityName;\r\n  }\r\n\r\n  registerDescription(descriptionComponent: IDescription) {\r\n    if (this.descriptions.indexOf(descriptionComponent) < 0) {\r\n      this.descriptions.push(descriptionComponent);\r\n    }\r\n  }\r\n\r\n  unregisterDescription(descriptionComponent: IDescription) {\r\n    const index = this.descriptions.indexOf(descriptionComponent);\r\n    if (index > -1) {\r\n      this.descriptions.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  getDescriptions(): IDescription[] {\r\n    return this.descriptions;\r\n  }\r\n\r\n  layerUpdates(): EventEmitter<any> {\r\n    return this.layerUpdate;\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}