{"version":3,"sources":["context-menu.service.ts"],"names":[],"mappings":"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","file":"context-menu.service.js","sourceRoot":"","sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\r\nimport { Cartesian3 } from '../../models/cartesian3';\r\nimport { ContextMenuOptions } from '../../models/context-menu-options';\r\nimport { MapEventsManagerService } from '../map-events-mananger/map-events-manager';\r\nimport { CesiumEvent } from '../map-events-mananger/consts/cesium-event.enum';\r\nimport { PickOptions } from '../map-events-mananger/consts/pickOptions.enum';\r\nimport { DisposableObservable } from '../map-events-mananger/disposable-observable';\r\nimport { BasicContextMenu } from '../../models/basic-context-menu';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n\r\n/**\r\n * The Service manages a singleton context menu over the map. It should be initialized with MapEventsManager.\r\n * The Service allows opening and closing of the context menu and passing data to the context menu inner component.\r\n */\r\n\r\n\r\nexport class ContextMenuService {\r\n  private _showContextMenu = false;\r\n  private _options: ContextMenuOptions;\r\n  private _position: Cartesian3;\r\n  private _content: BasicContextMenu;\r\n  private mapEventsManager: MapEventsManagerService;\r\n  private leftClickRegistration: DisposableObservable<any>;\r\n  private leftClickSubscription: Subscription;\r\n  private _contextMenuChangeNotifier = new EventEmitter();\r\n  private _onOpen = new EventEmitter();\r\n  private _onClose = new EventEmitter();\r\n  private _defaultContextMenuOptions: ContextMenuOptions = {\r\n    closeOnLeftCLick: true,\r\n    closeOnLeftClickPriority: 10,\r\n  };\r\n\r\n  get contextMenuChangeNotifier(): EventEmitter<any> {\r\n    return this._contextMenuChangeNotifier;\r\n  }\r\n\r\n  get showContextMenu(): boolean {\r\n    return this._showContextMenu;\r\n  }\r\n\r\n  get options(): ContextMenuOptions {\r\n    return this._options;\r\n  }\r\n\r\n  get position(): Cartesian3 {\r\n    return this._position;\r\n  }\r\n\r\n  get content(): BasicContextMenu {\r\n    return this._content;\r\n  }\r\n\r\n  get onOpen(): EventEmitter<any> {\r\n    return this._onOpen;\r\n  }\r\n\r\n  get onClose(): EventEmitter<any> {\r\n    return this._onClose;\r\n  }\r\n\r\n\r\n  init(mapEventsManager: MapEventsManagerService) {\r\n    this.mapEventsManager = mapEventsManager;\r\n  }\r\n\r\n  open(content: any, position: Cartesian3, options: ContextMenuOptions = {}) {\r\n    this.close();\r\n    this._content = content;\r\n    this._position = position;\r\n    this._options = Object.assign({}, this._defaultContextMenuOptions, options);\r\n    this._showContextMenu = true;\r\n    if (this.mapEventsManager && this._options.closeOnLeftCLick) {\r\n      this.leftClickRegistration = this.mapEventsManager.register({\r\n        event: CesiumEvent.LEFT_CLICK,\r\n        pick: PickOptions.NO_PICK,\r\n        priority: this._options.closeOnLeftClickPriority,\r\n      });\r\n      this.leftClickSubscription = this.leftClickRegistration.subscribe(() => {\r\n        this.leftClickSubscription.unsubscribe();\r\n        this.close();\r\n      });\r\n    }\r\n\r\n    this._contextMenuChangeNotifier.emit();\r\n    this._onOpen.emit();\r\n  }\r\n\r\n  close() {\r\n    this._content = undefined;\r\n    this._position = undefined;\r\n    this._options = undefined;\r\n    this._showContextMenu = false;\r\n    if (this.leftClickRegistration) {\r\n      this.leftClickRegistration.dispose();\r\n      this.leftClickRegistration = undefined;\r\n    }\r\n    if (this.leftClickSubscription) {\r\n      this.leftClickSubscription.unsubscribe();\r\n      this.leftClickSubscription = undefined;\r\n    }\r\n\r\n    this._contextMenuChangeNotifier.emit();\r\n    this._onClose.emit();\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}