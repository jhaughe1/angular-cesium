{"version":3,"sources":["polygons-manager.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,eAAA,EAAgB,MAAO,kCAAA,CAAmC;AAOnE;IAAA;QACC,aAAQ,GAAiC,IAAI,GAAG,EAA2B,CAAC;IAoC7E,CAAC;IAlCA,sDAAqB,GAArB,UAAsB,EAAU,EAAE,iBAAmC,EAAE,eAAiC,EACjG,kBAAoC,EAAE,mBAAwC,EAC9E,cAAmC,EAAE,SAAwB;QACnE,IAAM,eAAe,GAAG,IAAI,eAAe,CAC1C,EAAE,EACF,iBAAiB,EACjB,eAAe,EACf,kBAAkB,EAClB,mBAAmB,EACnB,cAAc,EACd,SAAS,CAAC,CAAC;QACZ,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,EAAE,eAAe,CACpC,CAAC;IACH,CAAC;IAED,wCAAO,GAAP,UAAQ,EAAU;QACjB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC;QAChC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAC1B,CAAC;IAED,oCAAG,GAAH,UAAI,EAAU;QACb,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC;IAED,sCAAK,GAAL;QACC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;QACpD,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;IACK,iCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IAEK,qCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,6BAAC;CArCD,AAqCC,IAAA;SArCY,sBAAsB","file":"polygons-manager.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { EditablePolygon } from '../../../models/editable-polygon';\r\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\r\nimport { PolygonEditOptions } from '../../../models/polygon-edit-options';\r\nimport {AcLayerComponent} from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\r\nimport {CoordinateConverter} from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\n\r\n\r\nexport class PolygonsManagerService {\r\n\tpolygons: Map<string, EditablePolygon> = new Map<string, EditablePolygon>();\r\n\t\r\n\tcreateEditablePolygon(id: string, editPolygonsLayer: AcLayerComponent, editPointsLayer: AcLayerComponent,\r\n\t\t\t\t\t\t  editPolylinesLayer: AcLayerComponent, coordinateConverter: CoordinateConverter,\r\n\t\t\t\t\t\t  polygonOptions?: PolygonEditOptions, positions?: Cartesian3[]) {\r\n\t\tconst editablePolygon = new EditablePolygon(\r\n\t\t\tid,\r\n\t\t\teditPolygonsLayer,\r\n\t\t\teditPointsLayer,\r\n\t\t\teditPolylinesLayer,\r\n\t\t\tcoordinateConverter,\r\n\t\t\tpolygonOptions,\r\n\t\t\tpositions);\r\n\t\tthis.polygons.set(id, editablePolygon\r\n\t\t);\r\n\t}\r\n\r\n\tdispose(id: string) {\r\n\t\tthis.polygons.get(id).dispose();\r\n\t\tthis.polygons.delete(id);\r\n\t}\r\n\t\r\n\tget(id: string): EditablePolygon {\r\n\t\treturn this.polygons.get(id);\r\n\t}\r\n\t\r\n\tclear() {\r\n\t\tthis.polygons.forEach(polygon => polygon.dispose());\r\n\t\tthis.polygons.clear();\r\n\t}\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}