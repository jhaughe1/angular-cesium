{"version":3,"sources":["hippodrome-manager.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAE3C,OAAO,EAAE,kBAAA,EAAmB,MAAO,qCAAA,CAAsC;AAMzE;IAAA;QACC,gBAAW,GAAoC,IAAI,GAAG,EAA8B,CAAC;IA6BtF,CAAC;IA3BA,2DAAwB,GAAxB,UAAyB,EAAU,EAAE,mBAAqC,EAAE,eAAiC,EACtG,mBAAwC,EAAE,qBAA6C,EACvF,SAAwB;QAC9B,IAAM,kBAAkB,GAAG,IAAI,kBAAkB,CAChD,EAAE,EACF,mBAAmB,EACnB,eAAe,EACf,mBAAmB,EACnB,qBAAqB,EACrB,SAAS,CAAC,CAAC;QACZ,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,EAAE,kBAAkB,CAAC,CAAC;IAC9C,CAAC;IAED,sCAAG,GAAH,UAAI,EAAU;QACb,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC;IAED,wCAAK,GAAL;QACC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAA,UAAU,IAAI,OAAA,UAAU,CAAC,OAAO,EAAE,EAApB,CAAoB,CAAC,CAAC;QAC7D,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;IACK,mCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IAEK,uCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,+BAAC;CA9BD,AA8BC,IAAA;SA9BY,wBAAwB","file":"hippodrome-manager.service.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Cartesian3 } from '../../../../angular-cesium/models/cartesian3';\r\nimport { EditableHippodrome } from '../../../models/editable-hippodrome';\r\nimport { HippodromeEditOptions } from '../../../models/hippodrome-edit-options';\r\nimport {AcLayerComponent} from '../../../../angular-cesium/components/ac-layer/ac-layer.component';\r\nimport {CoordinateConverter} from '../../../../angular-cesium/services/coordinate-converter/coordinate-converter.service';\r\n\r\n\r\nexport class HippodromeManagerService {\r\n\thippodromes: Map<string, EditableHippodrome> = new Map<string, EditableHippodrome>();\r\n\t\r\n\tcreateEditableHippodrome(id: string, editHippodromeLayer: AcLayerComponent, editPointsLayer: AcLayerComponent,\r\n\t\t\t\t\t\t\t coordinateConverter: CoordinateConverter, hippodromeEditOptions?: HippodromeEditOptions,\r\n\t\t\t\t\t\t\t positions?: Cartesian3[]) {\r\n\t\tconst editableHippodrome = new EditableHippodrome(\r\n\t\t\tid,\r\n\t\t\teditHippodromeLayer,\r\n\t\t\teditPointsLayer,\r\n\t\t\tcoordinateConverter,\r\n\t\t\thippodromeEditOptions,\r\n\t\t\tpositions);\r\n\t\tthis.hippodromes.set(id, editableHippodrome);\r\n\t}\r\n\t\r\n\tget(id: string): EditableHippodrome {\r\n\t\treturn this.hippodromes.get(id);\r\n\t}\r\n\t\r\n\tclear() {\r\n\t\tthis.hippodromes.forEach(hippodrome => hippodrome.dispose());\r\n\t\tthis.hippodromes.clear();\r\n\t}\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}