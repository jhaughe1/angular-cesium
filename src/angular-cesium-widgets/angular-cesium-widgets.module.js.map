{"version":3,"sources":["angular-cesium-widgets.module.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAA,EAAS,MAAO,eAAA,CAAgB;AACzC,OAAO,EAAE,YAAA,EAAa,MAAO,iBAAA,CAAkB;AAC/C,OAAO,EAAE,mBAAA,EAAoB,MAAO,yCAAA,CAA0C;AAC9E,OAAO,EAAE,uBAAA,EAAwB,MAAO,wDAAA,CAAyD;AACjG,OAAO,EAAE,sBAAA,EAAuB,MAAO,sDAAA,CAAuD;AAI9F,OAAO,EAAE,wBAAA,EAAyB,MAAO,0DAAA,CAA2D;AACpG,OAAO,EAAE,yBAAA,EAA0B,MAAO,4DAAA,CAA6D;AAEvG,OAAO,EAAE,uBAAA,EAAwB,MAAO,yCAAA,CAA0C;AAClF,OAAO,EAAE,qBAAA,EAAsB,MAAO,qCAAA,CAAsC;AAC5E,OAAO,EAAE,kBAAA,EAAmB,MAAO,sDAAA,CAAuD;AAC1F,OAAO,EAAE,iBAAA,EAAkB,MAAO,qDAAA,CAAsD;AACxF,OAAO,EAAE,wBAAA,EAAyB,MAAO,oEAAA,CAAqE;AAG9G;IAAA;IAkCA,CAAC;IAjCM,qCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;oBACvB,OAAO,EAAE;wBACP,YAAY;wBACZ,mBAAmB;qBACpB;oBACD,YAAY,EAAE;wBACd,yBAAyB;wBACvB,uBAAuB;wBACvB,sBAAsB;wBACxB,wBAAwB;wBACtB,uBAAuB;wBACvB,iBAAiB;wBACjB,kBAAkB;wBAClB,wBAAwB;qBACzB;oBACD,OAAO,EAAE;wBACT,yBAAyB;wBACvB,uBAAuB;wBACvB,sBAAsB;wBACtB,wBAAwB;wBACxB,uBAAuB;wBACvB,kBAAkB;wBAClB,wBAAwB;qBACzB;oBACD,SAAS,EAAE;wBACT,qBAAqB;qBACtB;iBACF,EAAG,EAAE;KACL,CAAC;IAEK,yCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,iCAAC;CAlCD,AAkCC,IAAA;SAlCY,0BAA0B","file":"angular-cesium-widgets.module.js","sourceRoot":"","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AngularCesiumModule } from '../angular-cesium/angular-cesium.module';\r\nimport { PolygonsEditorComponent } from './components/polygons-editor/polygons-editor.component';\r\nimport { CirclesEditorComponent } from './components/circles-editor/circles-editor.component';\r\nimport { CirclesEditorService } from './services/entity-editors/circles-editor/circles-editor.service';\r\nimport { PolygonsEditorService } from './services/entity-editors/polygons-editor/polygons-editor.service';\r\nimport { PolylinesEditorService } from './services/entity-editors/polyline-editor/polylines-editor.service';\r\nimport { PolylinesEditorComponent } from './components/polylines-editor/polylines-editor.component';\r\nimport { HippodromeEditorComponent } from './components/hippodrome-editor/hippodrome-editor.component';\r\nimport { HippodromeEditorService } from './services/entity-editors/hippodrome-editor/hippodrome-editor.service';\r\nimport { DraggableToMapDirective } from './directives/draggable-to-map.directive';\r\nimport { DraggableToMapService } from './services/draggable-to-map.service';\r\nimport { AcToolbarComponent } from './components/toolbar/ac-toolbar/ac-toolbar.component';\r\nimport { DragIconComponent } from './components/toolbar/ac-toolbar/drag-icon.component';\r\nimport { AcToolbarButtonComponent } from './components/toolbar/ac-toolbar-button/ac-toolbar-button.component';\r\n\r\n\r\nexport class AngularCesiumWidgetsModule {\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  imports: [\r\n    CommonModule,\r\n    AngularCesiumModule,\r\n  ],\r\n  declarations: [\r\n\t\tHippodromeEditorComponent,\r\n    PolygonsEditorComponent,\r\n    CirclesEditorComponent,\r\n\t\tPolylinesEditorComponent,\r\n    DraggableToMapDirective,\r\n    DragIconComponent,\r\n    AcToolbarComponent,\r\n    AcToolbarButtonComponent,\r\n  ],\r\n  exports: [\r\n\t\tHippodromeEditorComponent,\r\n    PolygonsEditorComponent,\r\n    CirclesEditorComponent,\r\n    PolylinesEditorComponent,\r\n    DraggableToMapDirective,\r\n    AcToolbarComponent,\r\n    AcToolbarButtonComponent,\r\n  ],\r\n  providers: [\r\n    DraggableToMapService,\r\n  ]\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}